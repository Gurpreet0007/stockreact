{"version":3,"sources":["service/UserService.js","App.js","Navbar.js","Admin.js","Importdata.js","Company/ManageCompany.js","service/StockExchangeService.js","service/CompanyService.js","service/SectorService.js","Company/AddCompany.js","Company/UpdateCompany.jsx","Company/UpdatePage.js","StockExchange/AddStockExchange.js","Sector/AddSector.js","service/Ipo.js","IPO/UpdateIpo.js","User.js","IPO/GetIpos.js","Chart.js","Second.js","http-common.js","service/UploadFile.js","File.js","Third.js","First.js","serviceWorker.js","index.js","logo.svg"],"names":["requestbody","axios","post","App","props","state","user","name","password","email","usertype","confirmed","num","submit","bind","changehandler1","fetchhttp","posthttpjson","posthttp","login","e","preventDefault","jj","uu","this","UserService","then","r","k","data","console","log","res","type","history","push","alert","usr","setState","JSON","stringify","target","value","finalurl","userType","mobile","fetch","method","headers","response","json","myJson","catch","error","myInit1","replace","body","className","ref","onChange","onClick","React","Component","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","Admin","to","activeStyle","Importdata","ManageCompany","get","id","url2","rqbody","put","url3","AddCompany","multiselectRef","createRef","turnover","directors","sector","writeup","ipodate","no","price","time","stockexchange","stockexchanges","sectors","savecompany","SectorService","getsector","StockExchangeService","getStockExchange","ans","current","getSelectedItems","b","map","a","stockExchange","concat","com","CompanyService","addcompany","placeholder","sec","options","displayValue","date","UpdateCompany","companies","editCompany","editipo","getCompanies","company","key","ceo","UpdatePage","changenamehandler","changeceohandler","changedirectorshandler","changeturnoverhandler","changesectorhandler","updatecompany","cancel","match","params","getcompanybyid","AddStockExchange","brief","address","remarks","stockexchangehandler","briefhandler","addresshandler","remarkshandler","savestockexchange","event","stock","addstockexchange","AddSector","sectorhandler","savesector","addsector","url","UpdateIpo","companyname","changepricehandler","changenumberhandler","number","changedatehandler","changetimehandler","stockex","Ipo","updateipo","getIpo","ipo","item","selectedValues","User","GetIpos","ipos","getipos","Chart","useState","chartData","setChartData","useEffect","empSal","empAge","price2","date2","dataObj","parseInt","currentPrice","labels","datasets","label","backgroundColor","borderWidth","err","chart","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","Second","path","component","create","baseURL","file","onUploadProgress","formData","FormData","append","http","File","selectFile","upload","selectedFiles","undefined","currentFile","progress","message","fileInfos","UploadService","getFiles","files","Math","round","loaded","total","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","disabled","Third","first","position","top","right","color","exact","Boolean","window","location","hostname","ReactDOM","render","First","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.04517cd1.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst url=\"http://localhost:8080/login\";\r\nconst url2=\"http://localhost:8080/displayCompany\";\r\nconst url3=\"http://localhost:8080/updatebasiccompany\";\r\nconst url4=\"http://localhost:8080/addcompany\";\r\nclass UserService{\r\n    \r\n    login(requestbody)\r\n    {\r\nreturn axios.post(url,requestbody)\r\n    }\r\n}\r\nexport default new UserService()","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from 'axios';\nimport UserService from './service/UserService';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { user: [], name: \"\", password: \"\", email: \"\" ,usertype:\"Admin\",confirmed:\"\",num:\"\"};\n    this.submit = this.submit.bind(this);\n    this.changehandler1 = this.changehandler1.bind(this);\n    this.fetchhttp = this.fetchhttp.bind(this);\n    this.posthttpjson = this.posthttpjson.bind(this);\n    this.posthttp =this.posthttp.bind(this);\n   this.login=this.login.bind(this)\n    //this.changehandler2 = this.changehandler2.bind(this);\n  }\n  login(e)\n  {\ne.preventDefault();\n  let a=\"\";\n  let b=\"\";\n    let uu={\n      email:this.state.email,\n      password:this.state.password,\n      usertype:this.state.usertype\n    };\n\n\n\n   /* CompanyService.getcompanybyid(this.state.id).then((res)=>\n    {\n        \n        let company=res.data;\n        console.log(company);\n        this.setState({\n            name:company.name,\n            turnover:company.turnover,\n            directors: company.directors,\n            ceo: company.ceo,\n            sector : company.sector\n    \n        })\n    }\n    );*/\n\nlet jj;\nUserService.login(uu).then((r)=>\n  {\n\nlet    k=r.data;\nconsole.log(\"k=\"+k);\njj=k; \n\n \nif(jj.res)\n{\n  if(jj.type==\"Admin\")\nthis.props.history.push(\"/admin\")\nelse if(jj.type==\"Non-Admin\")\nthis.props.history.push(\"/user\")\n} \nelse{\n  alert(\"First Signup\")\n}\n});\n}\n  submit(e) {\n    e.preventDefault();\n    var usr = this.state.user;\n    usr.push({\n      name: this.state.name,\n      password: this.state.password,\n      email: this.state.email,\n      usertype: this.state.usertype,\n      \n      num:this.state.num\n    });\n    this.setState({ user: usr });\n    console.log(JSON.stringify(this.state.user)+\"TEST\");\n\t // this.fetchhttp(e);\n     // this.posthttp(e);\n     this.posthttpjson(e);\n  }\n\n  changehandler1(e) {\n    if (e.target.name === \"name\"){\n\t\t\tthis.setState({ name: e.target.value });\n\t\t} \n\n    else if(e.target.name === \"email\"){\n    \tthis.setState({ email: e.target.value });\n\t}\n    else if  (e.target.name === \"password\"){\n   \t \n   \t this.setState({ password: e.target.value });\n}     \nelse if  (e.target.name === \"usertype\"){\n  \n  this.setState({ usertype: e.target.value });\n    \n  }\n  \n    else if  (e.target.name === \"num\"){\n  \n      this.setState({ num: e.target.value });\n        \n      }\n    }\n//backup get method to create users ,in case post does not work\n\tposthttp(e) { \n\n    console.log(\"posthttp\");\n\n    alert('Your favorite flavor is: ');\n    const myInit1  = {\n\t\t\tmethod: 'GET',\n\t\t\theaders: { 'Content-Type': 'application/json',\n\t\t\t'Access-Control-Allow-Origin' : '*',\n\t\t\t'Vary': 'Origin' },\n\n\t};\n   \n    let finalurl = 'http://127.0.0.1:8080/setuserapi?username='+this.state.name+'&password='\n    +this.state.password+'&email='+this.state.email+'&userType='+this.state.userType+'&confirmed='\n    +this.state.confirmed+'&mobile='+this.state.mobile+'';\n    \n\t\n\t\tfetch(finalurl, myInit1)\n      .then((response) => {\n          console.log(\"success\");\n        return response.json();\n      })\n      .then(function (myJson) {\n        console.log(myJson);\n      })\n      .catch((error) => console.error(error));\n  } \n\tposthttpjson(e) {\n    \n\n      console.log(\"posthttpjson\");\n  \n      const myInit1  = \n      {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin' : '*',\n        'Vary': 'Origin'.replace,\n        'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n    \"name\" :this.state.name,\n    \"email\" :this.state.email,\n      \"password\": this.state.password,//make sure these match with java entity class properties to avoid error\n       \"usertype\":this.state.usertype,\n       \"confirmed\":this.state.confirmed,\n       \"num\": this.state.num   \n        })\n      };\n      this.setState({ name: '' });\n      this.setState({ password: '' });\n      this.setState({ email: '' });\n      this.setState({ confirmed: '' });\n      this.setState({ num: '' });\n      alert(\"Confirm Email\");\n      let finalurl = 'http://127.0.0.1:8080/setuserapi2';\n      fetch(finalurl, myInit1)\n        .then((response) => \n        {\n          return response.json();\n        })\n        .then(function (myJson) {\n          console.log(myJson);\n        })\n        .catch((error) => console.error(error));\n     \n\t}\n\n\n\n  fetchhttp(e) {\n  \n    console.log(\"fetchhttp\");\n\n    const myInit1 = { method: \"GET\" };\n         \n    let finalurl = \"http://127.0.0.1:8080/companies/findById/1\";\n    //////\n    fetch(finalurl, myInit1)\n      .then((response) => {\n        return response.json();\n      })\n      .then(function (myJson) {\n        console.log(myJson);\n      })\n      .catch((error) => console.error(error));\n  } \n  \n  render() \n  {\n    return (\n      // \n      <div className=\"container\">\n      <div className=\"row\">\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n              \n\n      \n      <form > \n      <div className=\"form-group\">\n     <label>Name</label>\n        <input\n          type=\"username\"\n          name=\"name\" className=\"form-control\"\n          value={this.state.name}\n          ref=\"username\"\n          onChange={this.changehandler1}/>\n        </div>\n        \n        <div className=\"form-group\">\n     <label>Password</label>\n        <input\n          type=\"password\" className=\"form-control\"\n          name=\"password\"\n          value={this.state.password}\n          ref=\"password\"\n          onChange={this.changehandler1}\n        />\n        </div>\n        <div className=\"form-group\">\n     <label>Email</label>\n        <input\n          type=\"email\" className=\"form-control\"\n          name=\"email\"\n          value={this.state.email}\n          ref=\"email\"\n          onChange={this.changehandler1}\n        />\n        </div>\n        <div className=\"form-group\">\n     <label>Type</label>\n        <select name=\"usertype\" onChange={this.changehandler1}  className=\"form-control\">\n          <option value=\"Admin\">Admin</option>\n          <option value=\"Non-Admin\">Normal</option>\n        </select>{\" \"}\n        </div>\n        \n        <div className=\"form-group\">\n     <label>Mobile</label>\n        <input\n          type=\"Long\" className=\"form-control\"\n          name=\"num\"\n          value={this.state.num}\n          ref=\"num\"\n          onChange={this.changehandler1}\n        />\n        </div>\n        <button className=\"btn btn-success\" onClick={this.submit}>Sign Up</button>\n      {' '}  <button className=\"btn btn-success\" onClick={this.login}>Login</button>\n        {/* <button onClick={this.posthttpjson}>\n  Submit\n</button> */}\n      </form>\n      </div>\n      </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #0000ff;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((100vw - 1000px) / 2);\r\n  z-index: 10;\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  &.active {\r\n    color: #15cdfc;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\nbackground : #0000ff;\r\ndisplay: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 100vw; */\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #256ce1;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './Navbar';\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n       \r\n        <Bars />\r\n        <NavMenu>\r\n          <NavLink to=\"/admin/file\" activeStyle>\r\n            Import Data\r\n          </NavLink>\r\n          \r\n          <NavLink to=\"/admin/addcompany\" activeStyle>\r\n            Add Company\r\n          </NavLink>\r\n          <NavLink to=\"/admin/updatecompany\" activeStyle>\r\n            Update Company\r\n          </NavLink>\r\n          <NavLink to=\"/admin/addstockexchange\" activeStyle>\r\n            Add StockExchange\r\n          </NavLink>\r\n          <NavLink to=\"/admin/addsector\" activeStyle>\r\n            Add Sector\r\n          </NavLink>\r\n          \r\n        </NavMenu>\r\n       \r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport axios from 'axios';\r\n\r\nclass Importdata extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <h1>hi</h1>\r\n    );}}\r\nexport default Importdata;","import React from \"react\";\r\nimport logo from \"../logo.svg\";\r\nimport \"../App.css\";\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ManageCompany extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Link to=\"/addcompany\">add company</Link>\r\n      <Link to=\"/updatecompany\">update company</Link>\r\n      \r\n   </div> \r\n    );}}\r\nexport default ManageCompany;","import axios from 'axios'\r\n\r\nconst url=\"http://localhost:8080/addStockExchange\"\r\nconst url1=\"http://localhost:8080/getStockExchange\"\r\nclass StockExchangeService\r\n{\r\n addstockexchange(requestbody)\r\n    {\r\nreturn axios.post(url,requestbody);\r\n    }\r\n    getStockExchange()\r\n    {\r\n        return axios.get(url1);\r\n    }\r\n}\r\nexport default new StockExchangeService()","import axios from 'axios';\r\nconst url=\"http://localhost:8080/displayallcompany\";\r\nconst url2=\"http://localhost:8080/displayCompany\";\r\nconst url3=\"http://localhost:8080/updatebasiccompany\";\r\nconst url4=\"http://localhost:8080/addcompany\";\r\nclass CompanyService{\r\n    getCompanies()\r\n    {\r\n        return axios.get(url);\r\n    }\r\n    getcompanybyid(id)\r\n    {\r\n        return axios.get(url2 + \"/\"+id);\r\n    }\r\n    updatecompany(id,rqbody)\r\n    {\r\n        return axios.put(url3 + \"/\" + id,rqbody);\r\n    }\r\n    addcompany(requestbody)\r\n    {\r\nreturn axios.post(url4,requestbody)\r\n    }\r\n}\r\nexport default new CompanyService()","import axios from 'axios'\r\n\r\nconst url=\"http://localhost:8080/addsector\"\r\nconst url1=\"http://localhost:8080/getsector\"\r\nclass SectorService\r\n{\r\n addsector(requestbody)\r\n    {\r\nreturn axios.post(url,requestbody);\r\n    }\r\n    getsector()\r\n    {\r\n        return axios.get(url1);\r\n    }\r\n}\r\nexport default new SectorService()","import React from \"react\";\r\nimport logo from \"../logo.svg\";\r\nimport \"../App.css\";\r\nimport axios from 'axios';\r\nimport StockExchangeService from \"../service/StockExchangeService\";\r\nimport CompanyService from \"../service/CompanyService\";\r\nimport SectorService from \"../service/SectorService\";\r\nimport Multiselect from 'multiselect-react-dropdown';  \r\n\r\n\r\nclass AddCompany extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.multiselectRef = React.createRef();\r\n    this.state = { user: [], name: \"\", turnover: \"\", directors: \"\",sector:\"tech\",\r\nwriteup:\"\",ipodate:\"\",no:\"\",price:\"\",time:\"\",stockexchange:[],stockexchanges:[],sectors:[],sector:\"tech\"};\r\n  \r\n    this.changehandler1 = this.changehandler1.bind(this);\r\n  this.savecompany=this.savecompany.bind(this);\r\n    \r\n  }\r\n  componentDidMount()\r\n  {\r\n    SectorService.getsector().then((r)=>\r\n    {\r\n      this.setState({sectors:r.data});\r\n    });\r\n    StockExchangeService.getStockExchange().then((res)=>{\r\n      \r\nthis.setState({stockexchanges : res.data});\r\n    });\r\n  \r\n  }\r\n\r\n\r\n  changehandler1(e) {\r\n    if (e.target.name === \"name\"){\r\n\t\t\tthis.setState({ name: e.target.value });\r\n\t\t} \r\n\r\n    else if (e.target.name === \"turnover\"){\r\n        this.setState({ turnover: e.target.value });\r\n    } \r\n    else if  (e.target.name === \"directors\"){\r\n        this.setState({ directors: e.target.value });\r\n    } \r\nelse if (e.target.name === \"sector\"){\r\n    this.setState({ sector: e.target.value });\r\n} \r\nelse if (e.target.name === \"ipodate\"){\r\n    this.setState({ ipodate: e.target.value });\r\n} \r\nelse if (e.target.name === \"no\"){\r\n    this.setState({ no: e.target.value });\r\n} \r\nelse if (e.target.name === \"price\"){\r\n    this.setState({ price: e.target.value });\r\n} \r\nelse if (e.target.name === \"writeup\"){\r\n    this.setState({ writeup: e.target.value });\r\n} \r\nelse if (e.target.name === \"time\"){\r\n    this.setState({ time: e.target.value });\r\n} \r\nelse if (e.target.name === \"stockexchange\"){\r\n    this.setState({ stockexchange: e.target.value });\r\n} \r\n}\r\n\r\n  \r\n  savecompany(e)\r\n  {\r\n    e.preventDefault();\r\n    var arr=[];let ans=this.multiselectRef.current.getSelectedItems();\r\n    \r\n    console.log(ans);\r\n            let b=[];\r\n            ans.map(a=>(\r\n             (b.push(a.stockExchange))));\r\n   \r\n    var arr2= arr.concat(this.state.stockexchange);\r\n    let com={  name: this.state.name,\r\n      turnover : this.state.turnover,\r\n      directors : this.state.directors,\r\n      sector: this.state.sector,\r\n      ipodate: this.state.ipodate,\r\n      no: this.state.no,\r\n      price: this.state.price,\r\n      writeup: this.state.writeup,\r\n      time: this.state.time,\r\n      stockexchange: b,\r\n\r\n    }\r\n    console.log(JSON.stringify(com));\r\n    CompanyService.addcompany(com);\r\n  alert(\"saved\")\r\n  }\r\n  render() {\r\n    return (\r\n\r\n\r\n      \r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n              <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n\r\n\r\n      \r\n      <form >\r\n      <div className=\"form-group\">\r\n      <label>Company Name</label>\r\n      <input placeholder=\"Company Name\" name=\"name\" className=\"form-control\"\r\n       value={this.state.name} onChange={this.changehandler1}/>\r\n\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n      <label>Sector</label>\r\n      <select name=\"sector\" className=\"form-control\" onChange={this.changehandler1}>\r\n      {this.state.sectors.map(sec=>\r\n          <option value={sec.name}>\r\n            {sec.name}\r\n          </option>)}\r\n          </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n      <label>Stock Exchange</label>\r\n      <Multiselect options={this.state.stockexchanges} displayValue=\"stockExchange\" ref={this.multiselectRef}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n      <label>Directors</label>\r\n        <input name=\"directors\" placeholder=\"Separate by , \" className=\"form-control\" value={this.state.directors} onChange={this.changehandler1}/>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n      <label>Time</label>\r\n      <input placeholder=\"HH:MM\" name=\"time\" className=\"form-control\"\r\n       value={this.state.time} onChange={this.changehandler1}/>\r\n\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <label>Writeup</label>\r\n      <input placeholder=\"writeup\" name=\"writeup\" className=\"form-control\"\r\n       value={this.state.writeup} onChange={this.changehandler1}/>\r\n\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <label>Price</label>\r\n      <input placeholder=\"0\" name=\"price\" className=\"form-control\"\r\n       value={this.state.price} onChange={this.changehandler1}/>\r\n\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <label>IPO Date</label>\r\n      <input placeholder=\"yyyy/mm/dd\" name=\"date\" className=\"form-control\"\r\n       value={this.state.date} onChange={this.changehandler1}/>\r\n\r\n      </div>\r\n      <div className=\"form-group\">\r\n      <label>Number of Shares</label>\r\n      <input placeholder=\"0\" name=\"no\" className=\"form-control\"\r\n       value={this.state.no} onChange={this.changehandler1}/>\r\n</div>\r\n<div className=\"form-group\">\r\n      <label>Turnover</label>\r\n      <input placeholder=\"0\" name=\"turnover\" className=\"form-control\"\r\n       value={this.state.turnover} onChange={this.changehandler1}/>\r\n</div>\r\n      <button className=\"btn btn-success\" onClick={this.savecompany}>Save</button>\r\n      </form>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default AddCompany;","import React, { Component } from 'react';\r\nimport CompanyService from '../service/CompanyService';\r\n\r\nclass UpdateCompany extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            companies:[]\r\n        }\r\nthis.editCompany=this.editCompany.bind(this);\r\nthis.editipo=this.editipo.bind(this);\r\n    }\r\n  \r\n    editCompany(id){\r\n        this.props.history.push(`updatepage/${id}`);\r\n    }\r\n    editipo(id)\r\n    {\r\nthis.props.history.push(`updateipo/${id}`)\r\n    }\r\n  \r\n    componentDidMount()\r\n    {\r\n        CompanyService.getCompanies().then((res)=>{\r\nthis.setState({companies : res.data});\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Company List</h2>\r\n                <div className=\"row\">\r\n<table className=\"table table-striped table-bordered\">\r\n    <thead>\r\n        <tr>\r\n            <th>Company</th>\r\n            \r\n            <th>Directors</th>\r\n            <th>CEO</th>\r\n            <th>Turnover</th>\r\n            <th>Sector</th>\r\n            \r\n            <th>Update</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {\r\n            this.state.companies.map(company=>\r\n                <tr key={company.id}>\r\n                    <td>{company.name}</td>\r\n<td>{company.directors}</td>\r\n<td>{company.ceo}</td>\r\n\r\n<td>{company.turnover}</td>\r\n<td>{company.sector}</td>\r\n<td>\r\n    <button onClick={()=>this.editCompany(company.id)} className=\"btn btn-info\">Basic</button>\r\n{' '}\r\n    <button onClick={()=>this.editipo(company.id)} className=\"btn btn-info\">Ipo</button>\r\n</td>\r\n           \r\n\r\n                </tr>\r\n                )\r\n        }\r\n    </tbody>\r\n</table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateCompany;","import React, { Component } from 'react';\r\nimport CompanyService from '../service/CompanyService';\r\n\r\nclass UpdatePage extends Component {\r\nconstructor(props)\r\n{\r\n    super(props)\r\n    this.state = {\r\n        id: this.props.match.params.id,\r\n        \r\n        name: '',\r\n        turnover: '',\r\n        directors: '',\r\n        ceo: '',\r\n        sector: ''\r\n    }\r\n    this.changenamehandler=this.changenamehandler.bind(this);\r\n    this.changeceohandler=this.changeceohandler.bind(this);\r\n    this.changedirectorshandler=this.changedirectorshandler.bind(this);\r\n    this.changeturnoverhandler=this.changeturnoverhandler.bind(this);\r\n    this.changesectorhandler=this.changesectorhandler.bind(this);\r\n    this.cancel=this.cancel.bind(this);\r\n}\r\ncomponentDidMount()\r\n{\r\n    console.log(this.state.id);\r\nCompanyService.getcompanybyid(this.state.id).then((res)=>\r\n{\r\n    \r\n    let company=res.data;\r\n    console.log(company);\r\n    this.setState({\r\n        name:company.name,\r\n        turnover:company.turnover,\r\n        directors: company.directors,\r\n        ceo: company.ceo,\r\n        sector : company.sector\r\n\r\n    })\r\n}\r\n);\r\n}\r\nchangenamehandler=(e)=>\r\n{\r\n    this.setState({name:e.target.value});\r\n}\r\nchangeceohandler=(e)=>\r\n{\r\n    this.setState({ceo:e.target.value});\r\n}\r\nchangedirectorshandler=(e)=>\r\n{\r\n    this.setState({directors:e.target.value});\r\n}\r\nchangeturnoverhandler=(e)=>\r\n{\r\n    this.setState({turnover:e.target.value});\r\n}\r\nchangesectorhandler=(e)=>\r\n{\r\n    this.setState({sector:e.target.value});\r\n} \r\nsavecompany=(e)=>\r\n{\r\n    e.preventDefault();\r\n    let company={name:this.state.name,turnover:this.state.turnover,directors:this.state.directors,\r\n    ceo:this.state.ceo,sector:this.state.sector};\r\n    console.log('company=>'+ JSON.stringify(company));\r\n    CompanyService.updatecompany(this.state.id,company);\r\nalert(\"updated\")\r\n} \r\ncancel=(e)=>\r\n{\r\nthis.props.history.push(\"admin/updatecompany\");\r\n}\r\nrender() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Company Name</label>\r\n                                    <input placeholder=\"Company Name\" name=\"name\" className=\"form-control\"\r\n                                    value={this.state.name} onChange={this.changenamehandler}/>\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Directors</label>\r\n                                    <input placeholder=\"Directors\" name=\"directors\" className=\"form-control\"\r\n                                    value={this.state.directors} onChange={this.changedirectorshandler}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>CEO</label>\r\n                                    <input placeholder=\"CEO\" name=\"ceo\" className=\"form-control\"\r\n                                    value={this.state.ceo} onChange={this.changeceohandler}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Turnover</label>\r\n                                    <input placeholder=\"Turnover\" name=\"turnover\" className=\"form-control\"\r\n                                    value={this.state.turnover} onChange={this.changeturnoverhandler}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Sector</label>\r\n                                    <input placeholder=\"Sector\" name=\"sector\" className=\"form-control\"\r\n                                    value={this.state.sector} onChange={this.changesectorhandler}/>\r\n                                    \r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={this.savecompany}>Save  </button>\r\n                               {' '}\r\n                               \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdatePage;","import React, { Component } from 'react';\r\nimport StockExchangeService from '../service/StockExchangeService';\r\n\r\nclass AddStockExchange extends Component {\r\nconstructor(props)\r\n{\r\n    super(props)\r\n    this.state={\r\n    stockExchange:'',\r\n\t\r\n\tbrief:'',\r\n\taddress:'',\r\n\tremarks:''\r\n    }\r\n   this.stockexchangehandler=this.stockexchangehandler.bind(this)\r\n   this.briefhandler=this.briefhandler.bind(this)\r\n   this.addresshandler=this.addresshandler.bind(this)\r\n   this.remarkshandler=this.remarkshandler.bind(this)\r\n   this.savestockexchange=this.savestockexchange.bind(this)\r\n} \r\nstockexchangehandler(event)\r\n{\r\n    this.setState({\r\nstockExchange:event.target.value\r\n    })\r\n}\r\nbriefhandler(event)\r\n{\r\n    this.setState({\r\nbrief:event.target.value\r\n    })\r\n}\r\naddresshandler(event)\r\n{\r\n    this.setState({\r\naddress:event.target.value\r\n    })\r\n}\r\nremarkshandler(event)\r\n{\r\n    this.setState({\r\nremarks:event.target.value\r\n    })\r\n}\r\nsavestockexchange(e)\r\n{e.preventDefault();\r\n    let stock={stockExchange:this.state.stockExchange, brief:this.state.brief,\r\naddress:this.state.address,\r\nremarks:this.state.remarks}\r\nconsole.log(JSON.stringify(stock));\r\nStockExchangeService.addstockexchange(stock);\r\nalert(\"saved\")\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Stock Exchange</label>\r\n                                <input placeholder=\"Stock Exchange\" name=\"stockExchange\" className=\"form-control\"\r\n                                value={this.state.stockExchange} onChange={this.stockexchangehandler}/>\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Brief</label>\r\n                                <input placeholder=\"Brief\" name=\"brief\" className=\"form-control\"\r\n                                value={this.state.brief} onChange={this.briefhandler}/>\r\n                                \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Address</label>\r\n                                <input placeholder=\"Address\" name=\"address\" className=\"form-control\"\r\n                                value={this.state.address} onChange={this.addresshandler}/>\r\n                                \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Remarks</label>\r\n                                <input placeholder=\"Remarks\" name=\"remarks\" className=\"form-control\"\r\n                                value={this.state.remarks} onChange={this.remarkshandler}/>\r\n                                \r\n                            </div>\r\n                            \r\n\r\n                            <button className=\"btn btn-success\" onClick={this.savestockexchange}>Save</button>\r\n                        \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddStockExchange;","import React, { Component } from 'react';\r\nimport SectorService from '../service/SectorService';\r\nimport StockExchangeService from '../service/StockExchangeService';\r\n\r\nclass AddSector extends Component {\r\nconstructor(props)\r\n{\r\n    super(props)\r\n    this.state={\r\n    name:'',\r\n\t\r\n\tbrief:'',\r\n\t\r\n    }\r\n   this.sectorhandler=this.sectorhandler.bind(this)\r\n   this.briefhandler=this.briefhandler.bind(this)\r\n   \r\n   this.savesector=this.savesector.bind(this)\r\n} \r\nsectorhandler(event)\r\n{\r\n    this.setState({\r\nname:event.target.value\r\n    })\r\n}\r\nbriefhandler(event)\r\n{\r\n    this.setState({\r\nbrief:event.target.value\r\n    })\r\n}\r\n\r\nsavesector(e)\r\n{\r\n    e.preventDefault();\r\n    let sector={name:this.state.name, brief:this.state.brief\r\n}\r\nSectorService.addsector(sector);\r\nconsole.log(JSON.stringify(sector));\r\nalert(\"saved\")\r\n\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Sector</label>\r\n                                <input placeholder=\"Sector\" name=\"name\" className=\"form-control\"\r\n                                value={this.state.name} onChange={this.sectorhandler}/>\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Brief</label>\r\n                                <input placeholder=\"Brief\" name=\"brief\" className=\"form-control\"\r\n                                value={this.state.brief} onChange={this.briefhandler}/>\r\n                                \r\n                            </div>\r\n                            \r\n                           \r\n                            \r\n\r\n                            <button className=\"btn btn-success\" onClick={this.savesector}>Save</button>\r\n                        \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddSector;","import axios from 'axios'\r\n\r\nconst url=\"http://localhost:8080/displayCompanyIpo\"\r\nconst url1=\"http://localhost:8080/updateipo\"\r\nconst url2=\"http://localhost:8080/displayUpcomingIpo\"\r\n\r\nconst url3=\"http://localhost:8080/price\"\r\nclass Ipo\r\n{\r\n updateipo(requestbody)\r\n    {\r\nreturn axios.post(url1,requestbody);\r\n    }\r\n    getIpo(id)\r\n    {\r\n        return axios.get(url+\"/\"+id);\r\n    }\r\n    getipos()\r\n    {\r\n        return axios.get(url2);\r\n    }\r\n    getprice()\r\n    {\r\n        return axios.get(url3);\r\n    }\r\n}\r\nexport default new Ipo()","import React, { Component } from 'react';\r\nimport CompanyService from '../service/CompanyService';\r\nimport Ipo from '../service/Ipo';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport StockExchangeService from '../service/StockExchangeService';\r\n\r\nclass UpdateIpo extends Component {\r\nconstructor(props)\r\n{\r\n    super(props)\r\n    this.multiselectRef = React.createRef();\r\n    this.state = {\r\n        id: this.props.match.params.id,\r\n        \r\n      \r\n      \r\n        companyname: '',\r\n        price: '',\r\n        number: '',\r\n        date: '',\r\n        time: '',\r\n        stockex:[],\r\n        stockexchanges:[]\r\n    }\r\n    this.changenamehandler=this.changenamehandler.bind(this);\r\n    this.changepricehandler=this.changepricehandler.bind(this);\r\n    this.changenumberhandler=this.changenumberhandler.bind(this);\r\n    this.changedatehandler=this.changedatehandler.bind(this);\r\n    this.changetimehandler=this.changetimehandler.bind(this);\r\n    this.cancel=this.cancel.bind(this);\r\n}\r\ncomponentDidMount()\r\n{\r\n    \r\nIpo.getIpo(this.state.id).then((res)=>\r\n{\r\n    \r\n    let ipo=res.data;\r\n    console.log(ipo);\r\nlet ans=[];\r\nipo.stockex.map(item=>\r\n   (ans.push({stockExchange:item}) \r\n    ))\r\n\r\n\r\n    this.setState({\r\n        companyname:ipo.companyname,\r\n        price:ipo.price,\r\n        number:ipo.number,\r\n        date:ipo.date,\r\n        time:ipo.time,\r\n        stockex:ans\r\n\r\n    })\r\n}\r\n);\r\n\r\n  \r\n  StockExchangeService.getStockExchange().then((res)=>{\r\n    \r\nthis.setState({stockexchanges : res.data});\r\n  });\r\n\r\n\r\n\r\n}\r\nchangenamehandler=(e)=>\r\n{\r\n    this.setState({companyname:e.target.value});\r\n}\r\nchangepricehandler=(e)=>\r\n{\r\n    this.setState({price:e.target.value});\r\n}\r\nchangenumberhandler=(e)=>\r\n{\r\n    this.setState({number:e.target.value});\r\n}\r\nchangedatehandler=(e)=>\r\n{\r\n    this.setState({date:e.target.value});\r\n}\r\nchangetimehandler=(e)=>\r\n{\r\n    this.setState({time:e.target.value});\r\n} \r\nsavecompany=(e)=>\r\n{\r\n    e.preventDefault();\r\n   \r\n    let ans=this.multiselectRef.current.getSelectedItems();\r\n    \r\n    \r\n            let b=[];\r\n            ans.map(a=>(\r\n             (b.push(a.stockExchange))));\r\n\r\n   \r\n    let company={id:this.state.id,companyname:this.state.companyname,price:this.state.price,number:this.state.number,\r\n    date:this.state.date,time:this.state.time,stockex:b};\r\n    console.log('company=>'+ JSON.stringify(company));\r\nIpo.updateipo(company);\r\nalert(\"updated\")\r\n\r\n} \r\ncancel=(e)=>\r\n{\r\nthis.props.history.push(\"updatecompany\");\r\n}\r\nrender() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>Company Name</label>\r\n                                    <input placeholder=\"Company Name\" name=\"name\" className=\"form-control\"\r\n                                    value={this.state.companyname} onChange={this.changenamehandler}/>\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Price</label>\r\n                                    <input placeholder=\"0\" name=\"price\" className=\"form-control\"\r\n                                    value={this.state.price} onChange={this.changepricehandler}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Number</label>\r\n                                    <input placeholder=\"0\" name=\"number\" className=\"form-control\"\r\n                                    value={this.state.number} onChange={this.changenumberhandler}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Date</label>\r\n                                    <input placeholder=\"yyyy/mm/dd\" name=\"date\" className=\"form-control\"\r\n                                    value={this.state.date} onChange={this.changedatehandler}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Time</label>\r\n                                    <input placeholder=\"HH:MM\" name=\"time\" className=\"form-control\"\r\n                                    value={this.state.time} onChange={this.changetimehandler}/>\r\n                                    \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group\">\r\n      <label>Stock Exchange</label>\r\n      <Multiselect options={this.state.stockexchanges} displayValue=\"stockExchange\" selectedValues={this.state.stockex} ref={this.multiselectRef}/>\r\n        </div>\r\n                               \r\n                                <button className=\"btn btn-success\" onClick={this.savecompany}>Save</button>\r\n                              {' '}\r\n                               \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateIpo;","import React, { Component } from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './Navbar';\r\n\r\n\r\n\r\n\r\nconst User = () => {\r\n  \r\n  return (\r\n    <>\r\n      <Nav>\r\n       \r\n        <Bars />\r\n        <NavMenu>\r\n          <NavLink to=\"/user/getipos\" activeStyle>\r\n            IPO\r\n          </NavLink>\r\n          <NavLink to='/user/listcompanies' activeStyle>\r\n            List Companies\r\n          </NavLink>\r\n          <NavLink to='/user/Charts' activeStyle>\r\n            Charts\r\n          </NavLink>\r\n          \r\n          \r\n        </NavMenu>\r\n\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport CompanyService from '../service/CompanyService';\r\nimport Ipo from '../service/Ipo';\r\n\r\nclass GetIpos extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            ipos:[]\r\n        }\r\n\r\n    }\r\n  \r\n    \r\n  \r\n    componentDidMount()\r\n    {\r\n        console.log(1)\r\n        Ipo.getipos().then((res)=>{\r\n            console.log(res.data)\r\nthis.setState({ipos : res.data});\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Company List</h2>\r\n                <div className=\"row\">\r\n<table className=\"table table-striped table-bordered\">\r\n    <thead>\r\n        <tr>\r\n            <th>Company</th>\r\n            \r\n            <th>Date</th>\r\n            <th>Time</th>\r\n            <th>Price</th>\r\n            <th>Number</th>\r\n            \r\n        \r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {\r\n            this.state.ipos.map(ipo=>\r\n                <tr key={ipo.name}>\r\n<td>{ipo.companyname}</td>                    \r\n<td>{ipo.date}</td>\r\n<td>{ipo.time}</td>\r\n<td>{ipo.price}</td>\r\n<td>{ipo.number}</td>\r\n\r\n\r\n\r\n           \r\n\r\n                </tr>\r\n                )\r\n        }\r\n    </tbody>\r\n</table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetIpos;","\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Line,Bar } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst Chart = (props) => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [employeeSalary, setEmployeeSalary] = useState([]);\r\n  const [employeeAge, setEmployeeAge] = useState([]);\r\n\r\n  const chart = () => {\r\n    let empSal = [];\r\n    let empAge = [];\r\n    let price2=[];\r\n    let date2=[];\r\n    axios\r\n    .get(`http://localhost:8080/price`)\r\n    .then(res => {\r\n      console.log(res);\r\n      for (const dataObj of res.data) {\r\n        price2.push(parseInt(dataObj.currentPrice));\r\n        date2.push(parseInt(dataObj.time));\r\n         console.log(dataObj);\r\n      }})\r\n    axios\r\n      .get(`http://localhost:8080/price`)\r\n      .then(res => {\r\n        console.log(res);\r\n        for (const dataObj of res.data) {\r\n          empSal.push(parseInt(dataObj.currentPrice));\r\n          empAge.push(parseInt(dataObj.time));\r\n          // console.log(dataObj);\r\n        }\r\n\r\n        \r\n\r\n\r\n\r\n\r\n        setChartData({\r\n          labels: empAge,\r\n          datasets: [\r\n            {\r\n              label: \"stockprice\",\r\n              data: empSal,\r\n              backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n              borderWidth: 4\r\n            },\r\n              {\r\n                label: \"stockprice c2\",\r\n                data: price2,\r\n                backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n                borderWidth: 4\r\n                \r\n              }\r\n          ]\r\n        \r\n       \r\n        }\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    console.log(props);\r\n  };\r\n\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Stockprice vs Date</h1>\r\n      <div>\r\n        <Line\r\n          data={chartData}\r\n          options={{\r\n            responsive: true,\r\n            // maintainAspectRatio:false,\r\n            title: { text: \"THICCNESS SCALE\", display: true },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    autoSkip: true,\r\n                    maxTicksLimit: 10,\r\n                    beginAtZero: true\r\n                  },\r\n                  gridLines: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }}\r\n          \r\n\r\n        />\r\n        \r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;","import React,{component} from 'react';\r\nimport App from './App.js';\r\nimport Admin from './Admin.js';\r\nimport Importdata from './Importdata';\r\nimport ManageCompany from './Company/ManageCompany.js';\r\nimport AddCompany from './Company/AddCompany.js';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport UpdateCompany from './Company/UpdateCompany.jsx';\r\nimport UpdatePage from './Company/UpdatePage.js';\r\nimport AddStockExchange from './StockExchange/AddStockExchange.js';\r\nimport AddSector from './Sector/AddSector.js';\r\n\r\n\r\nimport UpdateIpo from './IPO/UpdateIpo.js';\r\nimport User from './User.js';\r\nimport GetIpos from './IPO/GetIpos.js';\r\nimport Chart from './Chart.js';\r\nfunction Second()\r\n{\r\n    return(\r\n<Router>\r\n    <div>\r\n    <User/>\r\n   <Switch>\r\n  \r\n    \r\n    <Route path=\"/user/charts\" component={Chart}></Route>\r\n      <Route path=\"/user/getipos\" component={GetIpos}/>\r\n      \r\n    </Switch>\r\n    </div>\r\n</Router>\r\n    );\r\n\r\n    \r\n}\r\nexport default Second;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\nclass UploadFile {\r\n    upload(file, onUploadProgress) {\r\n      let formData = new FormData();\r\n  \r\n      formData.append(\"file\", file);\r\n  \r\n      return http.post(\"http://localhost:8080/excel/uploadExcel\", formData, {\r\n        headers: {\r\n          \"mode\":\"no-cors\",\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          \"header\": {\"Access-Control-Allow-Origin\": '*'},\r\n        },\r\n        onUploadProgress,\r\n      });\r\n    }\r\n  \r\n    getFiles() {\r\n      return http.get(\"/files\");\r\n    }\r\n    \r\n  }\r\n  \r\n  export default new UploadFile();","import React, { Component } from \"react\";\r\nimport UploadService from \"./service/UploadFile.js\";\r\n\r\nexport default class File extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectFile = this.selectFile.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n\r\n    this.state = {\r\n      selectedFiles: undefined,\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      message: \"\",\r\n\r\n      fileInfos: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload() {\r\n    let currentFile = this.state.selectedFiles[0];\r\n\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, (event) => {\r\n      this.setState({\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Excel File successfully uploaded\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n  restartApp() \r\n  {\r\n    this.setState({ fileInfos: [] });\r\n    console.log('a');\r\n  }\r\n  render() {\r\n    const {\r\n      selectedFiles,\r\n      currentFile,\r\n      progress,\r\n      message,\r\n      fileInfos,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentFile && (\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n              role=\"progressbar\"\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: progress + \"%\" }}\r\n            >\r\n              {progress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <label className=\"btn btn-default\">\r\n          <input type=\"file\" onChange={this.selectFile} />\r\n        </label>\r\n\r\n        <button\r\n          className=\"btn btn-success\"\r\n          disabled={!selectedFiles}\r\n          onClick={this.upload}\r\n        >\r\n          Upload\r\n        </button>\r\n\r\n        <div className=\"alert alert-light\" role=\"alert\">\r\n          {message}\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}","\r\n\r\n\r\n\r\nimport React,{component} from 'react';\r\nimport App from './App.js';\r\nimport Admin from './Admin.js';\r\nimport Importdata from './Importdata';\r\nimport ManageCompany from './Company/ManageCompany.js';\r\nimport AddCompany from './Company/AddCompany.js';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport UpdateCompany from './Company/UpdateCompany.jsx';\r\nimport UpdatePage from './Company/UpdatePage.js';\r\nimport AddStockExchange from './StockExchange/AddStockExchange.js';\r\nimport AddSector from './Sector/AddSector.js';\r\n\r\n\r\nimport UpdateIpo from './IPO/UpdateIpo.js';\r\nimport User from './User.js';\r\nimport GetIpos from './IPO/GetIpos.js';\r\nimport File from './File.js';\r\nfunction Third()\r\n{\r\n    return(\r\n<Router>\r\n    <div>\r\n    \r\n    <Admin/>\r\n   <Switch>\r\n  \r\n    \r\n   <Route path=\"/admin/Importdata\" component={Importdata}/>\r\n<Route path=\"/admin/ManageCompany\" component={ManageCompany}/>\r\n<Route path=\"/admin/addcompany\" component={AddCompany}/>\r\n<Route path=\"/admin/updatecompany\" component={UpdateCompany}/>\r\n<Route path=\"/admin/updatepage/:id\" component={UpdatePage}/>\r\n<Route path=\"/admin/updateipo/:id\" component={UpdateIpo}/>\r\n<Route path=\"/admin/addstockexchange\" component={AddStockExchange}/>\r\n<Route path=\"/admin/addsector\" component={AddSector}/>\r\n<Route path=\"/admin/file\" component={File}/>\r\n\r\n    </Switch>\r\n    </div>\r\n</Router>\r\n    );\r\n\r\n    \r\n}\r\nexport default Third;","import React,{Component} from 'react';\r\nimport App from './App.js';\r\nimport Admin from './Admin.js';\r\nimport Importdata from './Importdata';\r\nimport ManageCompany from './Company/ManageCompany.js';\r\nimport AddCompany from './Company/AddCompany.js';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport UpdateCompany from './Company/UpdateCompany.jsx';\r\nimport UpdatePage from './Company/UpdatePage.js';\r\nimport AddStockExchange from './StockExchange/AddStockExchange.js';\r\nimport AddSector from './Sector/AddSector.js';\r\n\r\n\r\nimport UpdateIpo from './IPO/UpdateIpo.js';\r\nimport User from './User.js';\r\nimport GetIpos from './IPO/GetIpos.js';\r\nimport Second from './Second.js';\r\nimport Third from './Third.js';\r\n\r\n\r\nclass first extends Component {\r\n   constructor(props)\r\n   {\r\n       super(props)\r\n       \r\n       \r\n   }\r\n   \r\n    render() {\r\n        const mystyle={\r\n            position: \"absolute\",\r\n            top: \"25px\",\r\n            right: \"16px\",\r\n            color:\"black\"\r\n           };\r\n       \r\n        return (\r\n            <div>\r\n                \r\n                  <div>\r\n        \r\n                 \r\n        <Router>\r\n <Link style={mystyle} to=\"/\">Log Out</Link>\r\n            <div>\r\n           \r\n           <Switch>\r\n           <Route  exact path=\"/\" component={App}/>\r\n            <Route path=\"/user\" component={Second}/>\r\n                <Route path=\"/admin\" component={Third}/>\r\n              \r\n          \r\n            \r\n            \r\n            \r\n            </Switch>\r\n            </div>\r\n        </Router>\r\n        </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default first;\r\n/*function First()\r\n{\r\n    return(\r\n        <div>\r\n        \r\n       \r\n<Router>\r\n    <div>\r\n    <Button  onClick=(this.logout)>Log Out</Button>\r\n   <Switch>\r\n   <Route  exact path=\"/\" component={App}/>\r\n    <Route path=\"/user\" component={Second}/>\r\n        <Route path=\"/admin\" component={Third}/>\r\n      \r\n  \r\n    \r\n    \r\n    \r\n    </Switch>\r\n    </div>\r\n</Router>\r\n</div>\r\n  \r\n  );\r\n\r\n    \r\n}\r\nexport default First;*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport First from './First';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<First/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}